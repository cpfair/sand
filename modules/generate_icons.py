import re

# Can't use PDC on Aplite
# Have to reinvent wheel
src = open("icons.svg", "r").read()
dest = open("icons.h", "w")
dest.write("// THIS FILE AUTOMATICALLY GENERATED BY generate_icons.py\n#pragma once\n#include \"common.h\"\n")

for layer in re.finditer(r"<g id=\"(?P<id>[^\"]+)\">(?P<contents>.+?)</g>", src, re.DOTALL):
    name = layer.group("id").replace("_x5F_", "_").upper() # Meh
    paths_raw = re.finditer(r"points=\"(?P<points>[^\"]+)\"", layer.group("contents"))
    paths = []
    for path in paths_raw:
        path_points = re.finditer(r"(?P<x>[\d\.]+),(?P<y>[\d\.]+)\s", path.group("points"))
        paths.append([(round(float(pt.group("x"))), round(float(pt.group("y")))) for pt in path_points])

    # move to origin
    min_x = min([min([pt[0] for pt in path]) for path in paths])
    max_x = max([max([pt[0] for pt in path]) for path in paths])
    min_y = min([min([pt[1] for pt in path]) for path in paths])
    max_y = max([max([pt[1] for pt in path]) for path in paths])
    paths = [[(pt[0] - min_x, pt[1] - min_y) for pt in path] for path in paths]

    for idx, path in enumerate(paths):
        dest.write("GPATH_DEFINE(%s_%d, %d, ((GPoint[]){%s}))\n" % (name, idx, len(path), ",".join(["{%d,%d}" % pt for pt in path])))

    dest.write("#define DRAW_%s(ctx, x, y){%s}\n" % (name, " ".join(["GPATH_DRAW(ctx, %s_%d, x, y)" % (name, idx) for idx in range(len(paths))])))
    dest.write("#define ICON_%s_WIDTH %d\n" % (name, max_x - min_x))
    dest.write("#define ICON_%s_HEIGHT %d\n" % (name, max_y - min_y))
